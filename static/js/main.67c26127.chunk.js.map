{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","defaultProps","FeedbackOptions","incrementGoodFeedbacks","incrementNeutralFeedbacks","incrementBadFeedbacks","onLeaveFeedback","type","className","styles","good","onClick","neutral","bad","Statistics","total","positivePercentage","App","state","console","log","setState","prevState","this","toFixed","totalFeedbacks","countTotalFeedback","countPositiveFeedbackPercentage","message","Component","percentageOfGoodFeedb","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,0B,gBCA9FD,EAAOC,QAAU,CAAC,OAAS,gCAAgC,KAAO,4DAA4D,QAAU,+DAA+D,IAAM,6D,2LCEvMC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAChB,gCACKD,GAAS,6BAAKA,IACdC,MAILF,EAAQG,aAAe,CACnBF,MAAO,IAOID,Q,gBCPAI,EARS,SAAC,GAAD,IAAGC,EAAH,EAAGA,uBAAwBC,EAA3B,EAA2BA,0BAA2BC,EAAtD,EAAsDA,sBAAtD,EAA6EC,gBAA7E,OACpB,qCACI,wBAAQC,KAAK,SAASC,UAAWC,IAAOC,KAAMC,QAASR,EAAvD,kBACA,wBAAQI,KAAK,SAASC,UAAWC,IAAOG,QAASD,QAASP,EAA1D,qBACA,wBAAQG,KAAK,SAASC,UAAWC,IAAOI,IAAKF,QAASN,EAAtD,qB,gBCYOS,EAfI,SAAC,GAAuD,IAArDJ,EAAoD,EAApDA,KAAME,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKE,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACA,qCACI,oBAAGR,UAAWC,IAAOC,KAArB,mBAAiC,4BAAIA,OACrC,oBAAGF,UAAWC,IAAOG,QAArB,sBAAuC,4BAAIA,OAC3C,oBAAGJ,UAAWC,IAAOI,IAArB,kBAA+B,4BAAIA,OAEvB,IAAVE,EACF,qCACI,4BAAG,kDAAqBA,OACxB,oBAAGP,UAAWC,IAAOC,KAArB,iCAA+C,8BAAIM,EAAJ,UAAgC,kFAC7E,wB,gBCNRC,E,4MASJC,MAAQ,CACNR,KAAM,EACNE,QAAS,EACTC,IAAK,G,EAGPV,uBAAyB,WACvBgB,QAAQC,IAAI,wBACZ,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLZ,KAAMY,EAAUZ,KAAO,O,EAI7BN,0BAA4B,WAC1Be,QAAQC,IAAI,2BACZ,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACPV,QAASU,EAAUV,QAAU,O,EAIjCP,sBAAwB,WACtB,EAAKgB,UAAS,SAAAC,GAEZ,OADAH,QAAQC,IAAI,uBACL,CACPP,IAAKS,EAAUT,IAAM,O,wDAKzB,WACE,MAA+BU,KAAKL,MAA5BR,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAEd,OADuBF,EADvB,EAAuBG,IACaD,I,6CAGtC,WACE,MAA+BW,KAAKL,MAA5BR,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAEd,OADgCF,GAAQA,EADxC,EAAuBG,IAC8BD,GAAY,KAAKY,QAAQ,K,oBAIhF,SAAOC,GAEL,OACE,sBAAKjB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,yDAGF,cAAC,EAAD,CAAST,MAAM,GAAf,SACE,cAAC,EAAD,CACAI,uBAAwBoB,KAAKpB,uBAAwBC,0BAA2BmB,KAAKnB,0BAA2BC,sBAAuBkB,KAAKlB,0BAEzH,IAAlBoB,EACD,cAAC,EAAD,CAAS1B,MAAM,aAAf,SACA,cAAC,EAAD,CAAYW,KAAMa,KAAKL,MAAMR,KAAME,QAASW,KAAKL,MAAMN,QAASC,IAAKU,KAAKL,MAAML,IAAKE,MAAOQ,KAAKG,qBAAsBV,mBAAoBO,KAAKI,sCAEhJ,cAAC,IAAD,CAAcC,QAAQ,6B,GAnEdC,aAAZZ,EACGhB,aAAe,CACpBwB,eAAgB,EAChBK,sBAAuB,GAsEZb,QCtEAc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67c26127.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"Statistics_good__ztzmX\",\"neutral\":\"Statistics_neutral__kzhYe\",\"bad\":\"Statistics_bad__DfyF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1Nm7q\",\"good\":\"FeedbackOptions_good__3mHeT FeedbackOptions_button__1Nm7q\",\"neutral\":\"FeedbackOptions_neutral__3bDib FeedbackOptions_button__1Nm7q\",\"bad\":\"FeedbackOptions_bad__2k7Mo FeedbackOptions_button__1Nm7q\"};","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children}) => (\r\n<div>\r\n    {title && <h2>{title}</h2>}\r\n    {children}\r\n</div>\r\n);\r\n\r\nSection.defaultProps = {\r\n    title: ''\r\n}\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ incrementGoodFeedbacks, incrementNeutralFeedbacks, incrementBadFeedbacks, onLeaveFeedback }) => (\r\n    <>\r\n        <button type='button' className={styles.good} onClick={incrementGoodFeedbacks}>Good</button>\r\n        <button type='button' className={styles.neutral} onClick={incrementNeutralFeedbacks}>Neutral</button>\r\n        <button type='button' className={styles.bad} onClick={incrementBadFeedbacks}>Bad</button>\r\n    </>\r\n);\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n    <>\r\n        <p className={styles.good}>Good: <b>{good}</b></p>\r\n        <p className={styles.neutral}>Neutral: <b>{neutral}</b></p>\r\n        <p className={styles.bad}>Bad: <b>{bad}</b></p>\r\n        \r\n        {(total !== 0) ? \r\n        <>\r\n            <p><b>Total feedbacks: {total}</b></p>\r\n            <p className={styles.good}>Positive feedbacks: <b>{positivePercentage}%</b></p><h3>Thank you for attention our cafe Expresso :) </h3>\r\n        </> : \"No feedback given\"}\r\n    </>\r\n)};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\n\nimport Section from './Components/Section';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport Notification from './Components/Notification';\n\nclass App extends Component {\n  static defaultProps = {\n    totalFeedbacks: 0,\n    percentageOfGoodFeedb: 0,\n  }\n\n  static propTypes = {    \n  }\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  incrementGoodFeedbacks = () => {\n    console.log('Click on good option');\n    this.setState(prevState => {\n      return {\n        good: prevState.good + 1,\n      }      \n    })\n  }\n  incrementNeutralFeedbacks = () => {\n    console.log('Click on neutral option');\n    this.setState(prevState => {\n      return {\n      neutral: prevState.neutral + 1,\n    }\n    })\n  }\n  incrementBadFeedbacks = () => {\n    this.setState(prevState => {\n      console.log('Click on bad option');\n      return {\n      bad: prevState.bad + 1,\n    }\n    })\n  }\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedbacks = good + bad + neutral;\n    return totalFeedbacks;\n  }\n  countPositiveFeedbackPercentage() {\n    const { good, neutral, bad } = this.state;\n    const percentageOfGoodFeedb = ((good / (good + bad + neutral)) * 100).toFixed(2);\n    return percentageOfGoodFeedb;\n  }\n\n  render(totalFeedbacks) {\n    \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Please leave feedback</h1>\n        </header>\n\n        <Section title=\"\">\n          <FeedbackOptions \n          incrementGoodFeedbacks={this.incrementGoodFeedbacks} incrementNeutralFeedbacks={this.incrementNeutralFeedbacks} incrementBadFeedbacks={this.incrementBadFeedbacks} />\n        </Section>\n        { (totalFeedbacks!== 0) \n        ? <Section title=\"Statistics\">\n          <Statistics good={this.state.good} neutral={this.state.neutral} bad={this.state.bad} total={this.countTotalFeedback()} positivePercentage={this.countPositiveFeedbackPercentage()}/>\n        </Section> \n        : <Notification message=\"No feedback given\" /> }        \n      </div>\n    );\n  }  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}